<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
       xmlns:p="http://www.springframework.org/schema/p" 
       xmlns:context="http://www.springframework.org/schema/context" 
       xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans  
           http://www.springframework.org/schema/beans/spring-beans-3.2.xsd  
           http://www.springframework.org/schema/aop   
           http://www.springframework.org/schema/aop/spring-aop-3.2.xsd  
           http://www.springframework.org/schema/tx  
           http://www.springframework.org/schema/tx/spring-tx-3.2.xsd  
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.2.xsd"
	   default-autowire="byName" default-lazy-init="false">
	
	<!-- 1、Bean的配置项相对来说只有class是必须的，但需要从IoC容器中获取bean只有两种方式
	     一种是同ID，此时就必须配置ID属性，另一种是bean的类型，与class属性相关
	 
	<bean id="beanAutowiringDAO" class="aa.mine.Autowiring.dao.BeanAutowiringDAO"></bean>
	<bean id="beanAutowiringService" class="aa.mine.Autowiring.service.BeanAutowiringService"></bean>
	-->
	
	<!-- 
	2、Bean的定义及作用域的注解实现 
	     Spring 可以自动检测并注册Bean到ApplicationContext中，
	          条件是需要在相应的类上有标识注解 
	 -->
	<!-- 配置要扫描的包：扫描基于类的注解完成Bean的注册 -->
	<context:component-scan base-package="aa.mine.Autowiring.*" />
	<!-- 扫描采用注释的方式配置bean：在完成Bean的注册之后其完成Bean的成员方法或变量的注解-->
	<context:annotation-config />
	<!-- 通常在使用前者不在使用后者 -->
	
	
<!--
	3、default-autowire="byName、bytype、constructor、no"
	   no:不做任何操作
	   byname：根据属性名自动装配。在Ioc容器中查找与属性名完全一致的Bean。
	   bytype:根据类型自动装配
	   constructor：与bytype方式类似，不同之处在于使用了构造器
    -->
<!--	
	
	4、default-autowire="byName、bytype、constructor、no"
	   no:不做任何操作
	   byname：根据属性名自动装配。在Ioc容器中查找与属性名完全一致的Bean。
	   bytype:根据类型自动装配
	   constructor：与bytype方式类似，不同之处在于使用了构造器
    -->
		
</beans>